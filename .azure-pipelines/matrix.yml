parameters:
  os : ['ubuntu-latest']
  py_vers: ['3.7']
  test: ['tests/em',
         'tests/base tests/flow tests/seis tests/utils',
         'tests/docs',
         'tests/examples/test_examples_1.py',
         'tests/examples/test_examples_2.py',
         'tests/examples/test_examples_3.py',
         'tests/examples/test_tutorials_1.py tests/examples/test_tutorials_2.py',
         'tests/examples/test_tutorials_3.py',
         'tests/pf tests/dask',
         ]

jobs:
  - ${{ each os in parameters.os }}:
    - ${{ each py_vers in parameters.py_vers }}:
      - ${{ each test in parameters.test }}:
        - job:
          displayName: ${{ os }}_${{ py_vers }}_${{ test }}
          pool:
            vmImage: ${{ os }}
          steps:
          - script: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add conda to PATH

          - script: sudo chown -R $USER $CONDA
            displayName: Take ownership of conda installation

          - script: |
              eval "$(conda shell.bash hook)"
              conda update --yes --quiet -n base conda
              conda install --yes --quiet -c conda-forge mamba
            displayName: Install mamba

          - script: |
                eval "$(conda shell.bash hook)"
                echo "  - python="${{ py_vers }} >> environment_test.yml
                mamba env create -f environment_test.yml
                conda activate test
                pip install pytest-azurepipelines
            displayName: Create Anaconda testing environment

          - script: |
              eval "$(conda shell.bash hook)"
              conda activate test
              pip install -e .
            displayName: Build package

          - script: |
              eval "$(conda shell.bash hook)"
              conda activate test
              export KMP_WARNINGS=0
              pytest ${{ test }} -v -s --cov-config=.coveragerc --cov=SimPEG --cov-report=xml --cov-report=html -W ignore::DeprecationWarning
            displayName: 'Testing ${{ test }}'

          - script: |
              bash <(curl -s https://codecov.io/bash)
            displayName: 'Upload coverage to codecov.io'
            condition: eq(${{ py_vers }}, '3.7')
